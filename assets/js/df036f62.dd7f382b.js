"use strict";(self.webpackChunkmongodb_sprout_workshop=self.webpackChunkmongodb_sprout_workshop||[]).push([[282],{6527:(o,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var e=t(4848),r=t(8453);const s={},a="Connecting to your MongoDB Database",i={id:"spring-data-mongodb/getting-started",title:"Connecting to your MongoDB Database",description:"You'll need your connection string from your MongoDB Cluster:",source:"@site/docs/04-spring-data-mongodb/1-getting-started.mdx",sourceDirName:"04-spring-data-mongodb",slug:"/spring-data-mongodb/getting-started",permalink:"/mongodb-sprout-workshop/docs/spring-data-mongodb/getting-started",draft:!1,unlisted:!1,editUrl:"https://github.com/mongodb-developer/mongodb-sprout-workshop/blob/main/docs/04-spring-data-mongodb/1-getting-started.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Spring Data MongoDB",permalink:"/mongodb-sprout-workshop/docs/category/spring-data-mongodb"},next:{title:"MongoTemplate and MongoRepository",permalink:"/mongodb-sprout-workshop/docs/spring-data-mongodb/MongoTemplate-and-MongoRepository"}},d={},c=[];function g(o){const n={code:"code",h1:"h1",p:"p",pre:"pre",...(0,r.R)(),...o.components};return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(n.h1,{id:"connecting-to-your-mongodb-database",children:"Connecting to your MongoDB Database"}),"\n",(0,e.jsx)(n.p,{children:"You'll need your connection string from your MongoDB Cluster:"}),"\n",(0,e.jsx)(n.p,{children:"TODO check url format\nTODO make sure code follows best practice or is coviotted"}),"\n",(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:"language-bash",children:"spring.data.mongodb.uri=mongodb+srv://<user>:<password>@<Cluster>>t/?retryWrites=true&w=majority\nspring.data.mongodb.database=sample_training\n"})}),"\n",(0,e.jsx)(n.p,{children:"From here, Spring Data MongoDB is ready to connect to our database."}),"\n",(0,e.jsxs)(n.p,{children:["You can see in our ",(0,e.jsx)(n.code,{children:"Connection.class"})," how we setup a ",(0,e.jsx)(n.code,{children:"MongoClient"})," using these details."]}),"\n",(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{children:'    public static void main(String[] args) {\n        String connectionString = System.getProperty("mongodb.uri");\n        try (MongoClient mongoClient = MongoClients.create(connectionString)) {\n            System.out.println("=> Connection successful: " + preFlightChecks(mongoClient));\n            System.out.println("=> Print list of databases:");\n            List<Document> databases = mongoClient.listDatabases().into(new ArrayList<>());\n            databases.forEach(db -> System.out.println(db.toJson()));\n        }\n    }\n'})}),"\n",(0,e.jsx)(n.p,{children:"But with Spring Data MongoDB, we don't need to run any of this. It is all taken care under the hood."})]})}function p(o={}){const{wrapper:n}={...(0,r.R)(),...o.components};return n?(0,e.jsx)(n,{...o,children:(0,e.jsx)(g,{...o})}):g(o)}},8453:(o,n,t)=>{t.d(n,{R:()=>a,x:()=>i});var e=t(6540);const r={},s=e.createContext(r);function a(o){const n=e.useContext(s);return e.useMemo((function(){return"function"==typeof o?o(n):{...n,...o}}),[n,o])}function i(o){let n;return n=o.disableParentContext?"function"==typeof o.components?o.components(r):o.components||r:a(o.components),e.createElement(s.Provider,{value:n},o.children)}}}]);