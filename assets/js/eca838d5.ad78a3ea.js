"use strict";(self.webpackChunkmongodb_sprout_workshop=self.webpackChunkmongodb_sprout_workshop||[]).push([[731],{5613:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>r,contentTitle:()=>d,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var o=n(4848),s=n(8453);n(8180);const a={sidebar_position:20},d="What is MongoDB",i={id:"what-is-mongodb",title:"What is MongoDB",description:"MongoDB is an document-oriented database that is designed to store a large scale of data",source:"@site/docs/02-what-is-mongodb.mdx",sourceDirName:".",slug:"/what-is-mongodb",permalink:"/mongodb-sprout-workshop/docs/what-is-mongodb",draft:!1,unlisted:!1,editUrl:"https://github.com/mongodb-developer/mongodb-sprout-workshop/blob/main/docs/02-what-is-mongodb.mdx",tags:[],version:"current",sidebarPosition:20,frontMatter:{sidebar_position:20},sidebar:"tutorialSidebar",previous:{title:"\ud83d\udcd8 Introduction",permalink:"/mongodb-sprout-workshop/docs/intro"},next:{title:"\ud83c\udfc1 Quick Start",permalink:"/mongodb-sprout-workshop/docs/quick-start"}},r={},c=[];function l(e){const t={a:"a",h1:"h1",img:"img",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"what-is-mongodb",children:"What is MongoDB"}),"\n",(0,o.jsxs)(t.p,{children:["MongoDB is an document-oriented database that is designed to store a large scale of data\nand also allows you to work with that data very efficiently. It is a ",(0,o.jsx)(t.strong,{children:"NoSQL"})," (Not only SQL) database\nbecause it uses a document data model, different from the tabular databases that store data with relational tables."]}),"\n",(0,o.jsx)(t.p,{children:"The best way to start understanding MongoDB basics is to grasp the following comparison:"}),"\n",(0,o.jsxs)(t.table,{children:[(0,o.jsx)(t.thead,{children:(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.th,{children:"MongoDB"}),(0,o.jsx)(t.th,{children:"Traditional SQL"})]})}),(0,o.jsxs)(t.tbody,{children:[(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:"Database"}),(0,o.jsx)(t.td,{children:"Database"})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:"Collection"}),(0,o.jsx)(t.td,{children:"Table"})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:"Document"}),(0,o.jsx)(t.td,{children:"Row"})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:"$lookup"}),(0,o.jsx)(t.td,{children:"Join"})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:"Index"}),(0,o.jsx)(t.td,{children:"Index"})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:"ACID Transaction"}),(0,o.jsx)(t.td,{children:"ACID transaction"})]})]})]}),"\n",(0,o.jsxs)(t.p,{children:["The MongoDB database contains ",(0,o.jsx)(t.strong,{children:"collections"})," just like the MYSQL database contains tables. You are allowed to create\nmultiple databases and multiple collections in each database."]}),"\n",(0,o.jsxs)(t.p,{children:["Inside of the collection we have ",(0,o.jsx)(t.strong,{children:"documents"}),". These documents contain the data we want to store in the\nMongoDB database. MongoDB can handle dynamic data models (flexible schema) and schema that can easily store unstructured data sets."]}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"MongoDB sample document",src:n(8398).A+"",width:"616",height:"370"})}),"\n",(0,o.jsxs)(t.p,{children:["The documents are created using the fields. Fields are ",(0,o.jsx)(t.strong,{children:"key-value pairs"})," in the documents, like columns in\nthe relation database."]}),"\n",(0,o.jsxs)(t.p,{children:["The value of the fields can be of any ",(0,o.jsx)(t.strong,{children:"BSON"})," (Binary JSON) data types like double, string, boolean, etc."]}),"\n",(0,o.jsx)(t.p,{children:"The data stored in the MongoDB is in the format of BSON documents, and this BSON is stored and queried more efficiently."}),"\n",(0,o.jsx)(t.p,{children:"In MongoDB documents, you are allowed to store nested data. This nesting of data allows you to\ncreate complex relations between data and store them in the same document which makes the working and fetching\nof data extremely efficient as compared to SQL. In SQL, you need to write complex joins to get the data from table 1 and table 2."}),"\n",(0,o.jsx)(t.p,{children:"The maximum size of the BSON document is 16MB."}),"\n",(0,o.jsxs)(t.p,{children:["If you're new to the document model, check out our series on ",(0,o.jsx)(t.a,{href:"https://www.mongodb.com/developer/products/mongodb/schema-design-anti-pattern-summary/?utm_campaign=devrel&utm_source=workshop&utm_term=devrel.springio.workshop.java",children:"data modelling for MongoDB"}),"."]})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8398:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/document-45303f82097c626fc54fab2152c7096c.png"},8453:(e,t,n)=>{n.d(t,{R:()=>d,x:()=>i});var o=n(6540);const s={},a=o.createContext(s);function d(e){const t=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),o.createElement(a.Provider,{value:t},e.children)}}}]);