"use strict";(self.webpackChunkmongodb_sprout_workshop=self.webpackChunkmongodb_sprout_workshop||[]).push([[544],{4925:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>i,contentTitle:()=>a,default:()=>p,frontMatter:()=>s,metadata:()=>d,toc:()=>c});var t=o(4848),r=o(8453);const s={},a="Create",d={id:"spring-data-mongodb/Create",title:"Create",description:"Welcome to the begininning of CRUD! MongoRepository provides methods for creating,",source:"@site/docs/04-spring-data-mongodb/3-Create.mdx",sourceDirName:"04-spring-data-mongodb",slug:"/spring-data-mongodb/Create",permalink:"/mongodb-sprout-workshop/docs/spring-data-mongodb/Create",draft:!1,unlisted:!1,editUrl:"https://github.com/mongodb-developer/mongodb-sprout-workshop/blob/main/docs/04-spring-data-mongodb/3-Create.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"MongoTemplate and MongoRepository",permalink:"/mongodb-sprout-workshop/docs/spring-data-mongodb/MongoTemplate-and-MongoRepository"},next:{title:"Read",permalink:"/mongodb-sprout-workshop/docs/spring-data-mongodb/Read"}},i={},c=[{value:"save",id:"save",level:2},{value:"saveAll",id:"saveall",level:2},{value:"insert",id:"insert",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"create",children:"Create"}),"\n",(0,t.jsxs)(n.p,{children:["Welcome to the begininning of CRUD! MongoRepository provides methods for creating,\nreading, updating, and deleting documents in a MongoDB collection. It includes methods\nlike ",(0,t.jsx)(n.code,{children:"save()"}),", ",(0,t.jsx)(n.code,{children:"findById()"}),", ",(0,t.jsx)(n.code,{children:"findAll()"}),", ",(0,t.jsx)(n.code,{children:"deleteById()"}),", etc."]}),"\n",(0,t.jsx)(n.p,{children:"The create operation involves inserting or adding new data to the database, creating a new record or document."}),"\n",(0,t.jsx)(n.h2,{id:"save",children:"save"}),"\n",(0,t.jsxs)(n.p,{children:["To create a single grade, you can use the ",(0,t.jsx)(n.code,{children:"save()"})," method provided by the ",(0,t.jsx)(n.code,{children:"StudentRepository"}),".\nCreate a new instance of the ",(0,t.jsx)(n.code,{children:"Grade"})," class, set its attributes, and call the ",(0,t.jsx)(n.code,{children:"save()"})," method to persist it to the database."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"import org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\n@Service\npublic class StudentService {\n    @Autowired\n    private StudentRepository repository;\n\n    public Grade saveGrade(Grade grade) {\n        return repository.save(grade);\n    }\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"saveall",children:"saveAll"}),"\n",(0,t.jsxs)(n.p,{children:["To create multiple grades at once, use the ",(0,t.jsx)(n.code,{children:"saveAll()"})," method provided by the ",(0,t.jsx)(n.code,{children:"StudentRepository"}),". Pass a list of ",(0,t.jsx)(n.code,{children:"Grade"})," objects\nto this method, and it will save all the grades in a single batch operation."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"public List<Grade> saveGrades(List<Grade> grades) {\n    return repository.saveAll(grades);\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"insert",children:"insert"}),"\n",(0,t.jsxs)(n.p,{children:["Alternatively, you can use the ",(0,t.jsx)(n.code,{children:"insert()"})," method provided by the ",(0,t.jsx)(n.code,{children:"StudentRepository"})," to insert a grade into the database.\nThis method differs from ",(0,t.jsx)(n.code,{children:"save()"})," in that it only performs an insert operation and does not perform an update if\nthe grade already exists."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"public Grade insertGrade(Grade grade) {\n    return repository.insert(grade);\n}\n"})})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>a,x:()=>d});var t=o(6540);const r={},s=t.createContext(r);function a(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);