"use strict";(self.webpackChunkmongodb_sprout_workshop=self.webpackChunkmongodb_sprout_workshop||[]).push([[894],{5975:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>p,frontMatter:()=>l,metadata:()=>i,toc:()=>a});var d=n(4848),o=n(8453);const l={},r="Delete",i={id:"spring-data-mongodb/Delete",title:"Delete",description:"Deleting records involves removing existing documents from the database. MongoRepository provides methods",source:"@site/docs/04-spring-data-mongodb/6-Delete.mdx",sourceDirName:"04-spring-data-mongodb",slug:"/spring-data-mongodb/Delete",permalink:"/mongodb-sprout-workshop/docs/spring-data-mongodb/Delete",draft:!1,unlisted:!1,editUrl:"https://github.com/mongodb-developer/mongodb-sprout-workshop/blob/main/docs/04-spring-data-mongodb/6-Delete.mdx",tags:[],version:"current",sidebarPosition:6,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Update",permalink:"/mongodb-sprout-workshop/docs/spring-data-mongodb/Update"},next:{title:"Mapping POJOs",permalink:"/mongodb-sprout-workshop/docs/spring-data-mongodb/POJOs"}},s={},a=[{value:"delete (Delete a Single Document)",id:"delete-delete-a-single-document",level:2},{value:"deleteById",id:"deletebyid",level:2},{value:"deleteAll (Delete Multiple Documents)",id:"deleteall-delete-multiple-documents",level:2},{value:"deleteAll",id:"deleteall",level:2}];function c(e){const t={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(t.h1,{id:"delete",children:"Delete"}),"\n",(0,d.jsxs)(t.p,{children:["Deleting records involves removing existing documents from the database. MongoRepository provides methods\nto perform these deletions, such as ",(0,d.jsx)(t.code,{children:"delete()"}),", ",(0,d.jsx)(t.code,{children:"deleteById()"}),", ",(0,d.jsx)(t.code,{children:"deleteAll()"}),", and custom query methods."]}),"\n",(0,d.jsx)(t.h2,{id:"delete-delete-a-single-document",children:"delete (Delete a Single Document)"}),"\n",(0,d.jsxs)(t.p,{children:["To delete a single document, you can use the ",(0,d.jsx)(t.code,{children:"delete()"})," method. This method will delete the specified document\nfrom the database."]}),"\n",(0,d.jsx)(t.pre,{children:(0,d.jsx)(t.code,{className:"language-java",children:"import org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\n@Service\npublic class StudentService {\n    @Autowired\n    private StudentRepository repository;\n\n    public void deleteGrade(Grade grade) {\n        repository.delete(grade);\n    }\n}\n"})}),"\n",(0,d.jsxs)(t.p,{children:["To delete a grade by ",(0,d.jsx)(t.code,{children:"studentId"}),":"]}),"\n",(0,d.jsx)(t.pre,{children:(0,d.jsx)(t.code,{className:"language-java",children:'@Autowired\nprivate StudentRepository repository;\n\npublic void deleteGradeByStudentId(double studentId) {\n    Grade grade = repository.findByStudentId(studentId);\n    if (grade != null) {\n        repository.delete(grade);\n        System.out.println("Deleted grade: " + grade);\n    }\n}\n'})}),"\n",(0,d.jsx)(t.h2,{id:"deletebyid",children:"deleteById"}),"\n",(0,d.jsxs)(t.p,{children:["To delete a document by its id, you can use the ",(0,d.jsx)(t.code,{children:"deleteById()"})," method. This method will delete the document\nidentified by the given id."]}),"\n",(0,d.jsx)(t.p,{children:"To delete a grade by its id:"}),"\n",(0,d.jsx)(t.pre,{children:(0,d.jsx)(t.code,{className:"language-java",children:'@Autowired\nprivate StudentRepository repository;\n\npublic void deleteGradeById(String gradeId) {\n    repository.deleteById(gradeId);\n    System.out.println("Deleted grade with id: " + gradeId);\n}\n'})}),"\n",(0,d.jsx)(t.h2,{id:"deleteall-delete-multiple-documents",children:"deleteAll (Delete Multiple Documents)"}),"\n",(0,d.jsxs)(t.p,{children:["To delete multiple documents at once, use the ",(0,d.jsx)(t.code,{children:"deleteAll()"})," method provided by the ",(0,d.jsx)(t.code,{children:"StudentRepository"}),".\nYou can pass a list of ",(0,d.jsx)(t.code,{children:"Grade"})," objects to this method, and it will delete all the specified grades."]}),"\n",(0,d.jsxs)(t.p,{children:["To delete all grades with ",(0,d.jsx)(t.code,{children:"studentId"})," greater than or equal to 10000:"]}),"\n",(0,d.jsx)(t.pre,{children:(0,d.jsx)(t.code,{className:"language-java",children:'@Autowired\nprivate StudentRepository repository;\n\npublic void deleteGradesForStudentIdGreaterThanEqual(double studentId) {\n    repository.deleteAll(repository.findByStudentIdGreaterThanEqual(studentId));\n    System.out.println("Deleted all grades with student_id >= " + studentId);\n}\n'})}),"\n",(0,d.jsx)(t.h2,{id:"deleteall",children:"deleteAll"}),"\n",(0,d.jsxs)(t.p,{children:["To delete all documents in a collection, you can use the ",(0,d.jsx)(t.code,{children:"deleteAll()"})," method without any arguments.\nThis method will delete all the documents in the specified collection."]}),"\n",(0,d.jsx)(t.p,{children:"To delete the entire contents of the grades collection:"}),"\n",(0,d.jsx)(t.pre,{children:(0,d.jsx)(t.code,{className:"language-java",children:'@Autowired\nprivate StudentRepository repository;\n\npublic void deleteAllGrades() {\n    repository.deleteAll();\n    System.out.println("Deleted the entire grades collection.");\n}\n'})}),"\n",(0,d.jsxs)(t.p,{children:["Depending on your reasoning for deleting the entire contents of a collecion, it might make more sense\nfor you to just drop the collection. In which case, using the ",(0,d.jsx)(t.code,{children:"dropCollection()"})," method from ",(0,d.jsx)(t.code,{children:"MongoTemplate"})," is a far more\nperformant choice;"]}),"\n",(0,d.jsx)(t.pre,{children:(0,d.jsx)(t.code,{className:"language-java",children:'mongoTemplate.dropCollection("collectionName");\n'})})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,d.jsx)(t,{...e,children:(0,d.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>i});var d=n(6540);const o={},l=d.createContext(o);function r(e){const t=d.useContext(l);return d.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),d.createElement(l.Provider,{value:t},e.children)}}}]);